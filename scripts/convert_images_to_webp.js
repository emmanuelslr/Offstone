#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// V√©rifier si ImageMagick est install√©
function checkImageMagick() {
  try {
    execSync('magick -version', { stdio: 'ignore' });
    return true;
  } catch {
    try {
      execSync('convert -version', { stdio: 'ignore' });
      return true;
    } catch {
      return false;
    }
  }
}

// Convertir une image en WebP
function convertToWebP(inputPath, outputPath, quality = 85) {
  try {
    const command = `magick "${inputPath}" -quality ${quality} -define webp:lossless=false "${outputPath}"`;
    execSync(command, { stdio: 'ignore' });
    return true;
  } catch {
    try {
      const command = `convert "${inputPath}" -quality ${quality} -define webp:lossless=false "${outputPath}"`;
      execSync(command, { stdio: 'ignore' });
      return true;
    } catch (error) {
      console.error(`‚ùå Erreur conversion ${inputPath}:`, error.message);
      return false;
    }
  }
}

// Parcourir r√©cursivement les dossiers d'images
function processImages(dir) {
  const files = fs.readdirSync(dir);
  let converted = 0;
  let skipped = 0;

  for (const file of files) {
    const filePath = path.join(dir, file);
    const stat = fs.statSync(filePath);

    if (stat.isDirectory()) {
      const result = processImages(filePath);
      converted += result.converted;
      skipped += result.skipped;
    } else if (/\.(jpg|jpeg|png)$/i.test(file)) {
      const webpPath = filePath.replace(/\.(jpg|jpeg|png)$/i, '.webp');
      
      // V√©rifier si le WebP existe d√©j√†
      if (fs.existsSync(webpPath)) {
        console.log(`‚è≠Ô∏è  WebP existe d√©j√†: ${file}`);
        skipped++;
        continue;
      }

      console.log(`üîÑ Conversion: ${file} ‚Üí ${path.basename(webpPath)}`);
      
      if (convertToWebP(filePath, webpPath)) {
        console.log(`‚úÖ Converti: ${file}`);
        converted++;
      } else {
        skipped++;
      }
    }
  }

  return { converted, skipped };
}

// Script principal
console.log('üöÄ Conversion des images en WebP...\n');

if (!checkImageMagick()) {
  console.log('‚ùå ImageMagick n\'est pas install√©.');
  console.log('üì• Installez-le avec:');
  console.log('   - Windows: choco install imagemagick');
  console.log('   - macOS: brew install imagemagick');
  console.log('   - Ubuntu: sudo apt-get install imagemagick');
  process.exit(1);
}

const imagesDir = './public/images';
if (!fs.existsSync(imagesDir)) {
  console.log('‚ùå Dossier images non trouv√©:', imagesDir);
  process.exit(1);
}

const result = processImages(imagesDir);

console.log(`\n‚ú® Conversion termin√©e !`);
console.log(`‚úÖ ${result.converted} images converties`);
console.log(`‚è≠Ô∏è  ${result.skipped} images ignor√©es`);
console.log('\nüí° Les images WebP sont automatiquement utilis√©es par Next.js !');
