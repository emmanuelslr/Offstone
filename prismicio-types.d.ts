// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for Article documents
 */
interface ArticleDocumentData {
  /**
   * Title field in *Article*
   */
  title: prismic.KeyTextField;

  /**
   * Excerpt field in *Article*
   */
  excerpt: prismic.KeyTextField;

  /**
   * Body field in *Article*
   */
  body: prismic.RichTextField;

  /**
   * Published at field in *Article*
   */
  published_at: prismic.DateField;
}

/**
 * Article document from Prismic
 */
export type ArticleDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ArticleDocumentData>,
    "article",
    Lang
  >;

export type AllDocumentTypes = ArticleDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type { ArticleDocument, ArticleDocumentData, AllDocumentTypes };
  }
}
